# ===========================================
# Production Configuration
# ===========================================

# Server Configuration
server.port=${SERVER_PORT:8080}


# Spring Configuration
spring.profiles.active=prod

# ===========================================
# Database Configuration (PostgreSQL)
# ===========================================

# PostgreSQL Database (Production) - локальная БД со схемой invest
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5434/investment_trading?currentSchema=invest}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${DB_MAX_LIFETIME:1800000}

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:false}

# ===========================================
# T Invest API Configuration
# ===========================================

# T Invest API Settings (Production)
tinvest.api.token=${TINVEST_API_TOKEN}
tinvest.api.url=${TINVEST_API_URL:invest-public-api.tinkoff.ru}
tinvest.api.port=${TINVEST_API_PORT:443}
tinvest.api.sandbox=${TINVEST_API_SANDBOX:false}
tinvest.api.timeout=${TINVEST_API_TIMEOUT:30000}

# ===========================================
# Cache Configuration
# ===========================================

# Caffeine Cache Settings (Production)
spring.cache.type=caffeine
spring.cache.caffeine.spec=${CACHE_SPEC:maximumSize=5000,expireAfterWrite=30m,expireAfterAccess=15m}

# Cache Names
cache.names.trading-operations=trading-operations
cache.names.portfolio-data=portfolio-data
cache.names.asset-prices=asset-prices
cache.names.shares-reference=shares-reference
cache.names.futures-reference=futures-reference

# ===========================================
# Logging Configuration
# ===========================================

# Logging Level (Production)
logging.level.com.example.investmenttradingservice=${LOG_LEVEL:INFO}
logging.level.org.springframework.cache=${CACHE_LOG_LEVEL:WARN}
logging.level.io.grpc=${GRPC_LOG_LEVEL:WARN}
logging.level.ru.tinkoff.piapi=${TINVEST_LOG_LEVEL:WARN}
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:WARN}

# Log Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Log File Configuration
logging.file.name=${LOG_FILE_PATH:/var/log/investment-trading-service/application.log}
logging.file.max-size=${LOG_MAX_SIZE:100MB}
logging.file.max-history=${LOG_MAX_HISTORY:30}

# ===========================================
# Actuator Configuration
# ===========================================

# Actuator Endpoints (Production)
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS:health,info,metrics}
management.endpoint.health.show-details=${HEALTH_SHOW_DETAILS:never}
management.endpoint.cache.enabled=${CACHE_ENDPOINT_ENABLED:false}

# Health Check Configuration
management.health.cache.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.diskspace.threshold=${DISK_SPACE_THRESHOLD:100MB}

# ===========================================
# Security Configuration
# ===========================================

# Basic Security (Production)
spring.security.user.name=${ADMIN_USERNAME}
spring.security.user.password=${ADMIN_PASSWORD}
spring.security.user.roles=${ADMIN_ROLES:ADMIN}

# ===========================================
# Jackson Configuration
# ===========================================

# JSON Serialization
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=${TIMEZONE:Europe/Moscow}
spring.jackson.default-property-inclusion=NON_NULL

# ===========================================
# Validation Configuration
# ===========================================

# Validation Settings
spring.validation.enabled=true

# ===========================================
# Error Handling
# ===========================================

# Error Pages (Production)
server.error.include-message=${ERROR_INCLUDE_MESSAGE:never}
server.error.include-binding-errors=${ERROR_INCLUDE_BINDING:never}
server.error.include-stacktrace=${ERROR_INCLUDE_STACKTRACE:never}
server.error.include-exception=false

# ===========================================
# Performance Configuration
# ===========================================

# Thread Pool Configuration
server.tomcat.threads.max=${TOMCAT_MAX_THREADS:200}
server.tomcat.threads.min-spare=${TOMCAT_MIN_THREADS:10}
server.tomcat.max-connections=${TOMCAT_MAX_CONNECTIONS:8192}
server.tomcat.accept-count=${TOMCAT_ACCEPT_COUNT:100}

# ===========================================
# Monitoring Configuration
# ===========================================

# Metrics Configuration
management.metrics.export.prometheus.enabled=${PROMETHEUS_ENABLED:false}
management.metrics.export.prometheus.step=${PROMETHEUS_STEP:60s}

# ===========================================
# SSL Configuration (если используется)
# ===========================================

# SSL Settings (опционально)
# server.ssl.enabled=${SSL_ENABLED:false}
# server.ssl.key-store=${SSL_KEYSTORE_PATH:}
# server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
# server.ssl.key-store-type=${SSL_KEYSTORE_TYPE:PKCS12}
# server.ssl.key-alias=${SSL_KEY_ALIAS:}
